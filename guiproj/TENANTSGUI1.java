/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package guiproj;
//import sql_table.Stores;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.sql.Connection;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import org.apache.poi.ss.formula.eval.PercentEval;
import org.eclipse.persistence.internal.jpa.EntityManagerFactoryDelegate;
//import sql_table.Stores;
import oracle.jdbc.*;
import oracle.jdbc.pool.OracleDataSource;
//import sql_table.Floor;


/**
 *
 * @author MTC
 */
public class TENANTSGUI1 extends javax.swing.JFrame {
Home_screen op ; 
    /**
     * Creates new form Home_screen
     */
       public TENANTSGUI1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        addstore = new javax.swing.JToggleButton();
        sesrech = new javax.swing.JButton();
        showall = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        returnhome = new javax.swing.JButton();
        remove = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txtt1 = new javax.swing.JTextField();
        txtremove = new javax.swing.JTextField();
        close = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        a1 = new javax.swing.JTextArea();

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(217, 30, 24));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addstore.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        addstore.setForeground(new java.awt.Color(217, 30, 24));
        addstore.setText("Add TENANT");
        addstore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addstoreActionPerformed(evt);
            }
        });
        jPanel1.add(addstore, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 290, 40));

        sesrech.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        sesrech.setForeground(new java.awt.Color(217, 30, 24));
        sesrech.setText("searech");
        sesrech.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sesrechActionPerformed(evt);
            }
        });
        jPanel1.add(sesrech, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 130, 80));

        showall.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        showall.setForeground(new java.awt.Color(217, 30, 24));
        showall.setText("Show all ");
        showall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showallActionPerformed(evt);
            }
        });
        jPanel1.add(showall, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 280, 40));

        edit.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        edit.setForeground(new java.awt.Color(217, 30, 24));
        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        jPanel1.add(edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 320, 280, 40));

        returnhome.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        returnhome.setForeground(new java.awt.Color(217, 30, 24));
        returnhome.setText("Home");
        returnhome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnhomeActionPerformed(evt);
            }
        });
        jPanel1.add(returnhome, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, 280, 40));

        remove.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        remove.setForeground(new java.awt.Color(217, 30, 24));
        remove.setText("Remove ");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });
        jPanel1.add(remove, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 150, 40));

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(0, 0, 255));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "     Search by :", " Tenant  ID", "   store ID", "Tenant Name ", "STORE TYPE" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 130, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Enter id Store here");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 210, 150, 30));
        jPanel1.add(txtt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 160, 130, 30));
        jPanel1.add(txtremove, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 250, 110, 40));

        close.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        close.setForeground(new java.awt.Color(217, 30, 24));
        close.setText("Close  :(");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });
        jPanel1.add(close, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 440, 280, 40));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/guiproj/sososss.jpg"))); // NOI18N
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -6, 290, 530));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(217, 30, 24));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Bernard MT Condensed", 0, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("TENANTS");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(201, 0, 480, 61));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/guiproj/sososss.jpg"))); // NOI18N
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(-6, 0, 690, 60));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        a1.setColumns(20);
        a1.setForeground(new java.awt.Color(51, 51, 255));
        a1.setRows(5);
        jScrollPane1.setViewportView(a1);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 680, 430));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        
        
          String TENANT_NAME;
          String TENANTID;
          String TENANT_PHONE;
          String ID_STORE;
          String ADDRESS;
          String SEX;
           String STORE_TYPE;
          String CONTRACT_START_DATE;
          String CONTRACT_END_DATE;
          
    //  String index;
          int index;
      
    
    
    private void addstoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addstoreActionPerformed
       tenantop addtnt = new  tenantop();
        
          addtnt.setSize(605,360);
        
        addtnt.setVisible(true);
        
        
    }//GEN-LAST:event_addstoreActionPerformed

    private void sesrechActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sesrechActionPerformed
        
       String [] tsd;
      String [] ted;
         EntityManagerFactory emf = Persistence.createEntityManagerFactory("GUIprojPU");
        EntityManager em =emf.createEntityManager();
        em.getTransaction().begin();
        
         Query qr=em.createNamedQuery("TenantOwner.findAll");
         List<TenantOwner> alltnt=qr.getResultList();
       String nu;
       
      int num; 
     // String owner ;
        nu= txtt1.getText();
            String [] adf;

        
         if(index==1)
         {
          num=Integer.parseInt(nu);   
         
       this.a1.setText("TENANT NAME     \t TENANT ID \t    TENANT PHONE  \tID STORE    \t ADDRESS      \t  SEX   \t STORE TYPE  \t CONTRACT START DATE  \t CONTRACT END DATE   \n");
        this.a1.append("-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n ");
 
             
             
           for(TenantOwner ss:alltnt)
        {
            if(ss.getTenantOwnerId()== num) 
            {
      
       TENANT_NAME=String.valueOf(ss.getTenantOwnerName());
          TENANTID=String.valueOf(ss.getTenantOwnerId());
           TENANT_PHONE=String.valueOf(ss.getTenantOwnerPhone());
         ID_STORE=String.valueOf(ss.getIdStore());
           ADDRESS=String.valueOf(ss.getAddress());
          SEX=String.valueOf(ss.getSex());
            STORE_TYPE=String.valueOf(ss.getStoreType());
            
              CONTRACT_START_DATE=String.valueOf(ss.getContractStartDate());
          CONTRACT_END_DATE=String.valueOf(ss.getContractEndDate());
          this.a1.append( TENANT_NAME +"\t     \t"+ TENANTID+"\t      "+ TENANT_PHONE+ "\t\t    "+ ID_STORE+ "  \t"+ADDRESS+"\t   "+SEX+"           \t"+STORE_TYPE +"\t          "+CONTRACT_START_DATE+"                       \t"+CONTRACT_END_DATE+"\n");

         this.a1.append("-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n ");
        
            }
            
        
        }
             
 
         }
         
         if(index==2)
         {
             
           
           num=Integer.parseInt(nu);   
      this.a1.setText("TENANT NAME     \t TENANT ID \t    TENANT PHONE  \tID STORE    \t ADDRESS      \t  SEX   \t STORE TYPE  \t CONTRACT START DATE  \t CONTRACT END DATE   \n");
        this.a1.append("-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n ");
 
             
             
           for(TenantOwner ss:alltnt)
        {
            if(ss.getIdStore()== num) 
            {
       TENANT_NAME=String.valueOf(ss.getTenantOwnerName());
          TENANTID=String.valueOf(ss.getTenantOwnerId());
           TENANT_PHONE=String.valueOf(ss.getTenantOwnerPhone());
         ID_STORE=String.valueOf(ss.getIdStore());
           ADDRESS=String.valueOf(ss.getAddress());
          SEX=String.valueOf(ss.getSex());
            STORE_TYPE=String.valueOf(ss.getStoreType());
            
              CONTRACT_START_DATE=String.valueOf(ss.getContractStartDate());
          CONTRACT_END_DATE=String.valueOf(ss.getContractEndDate());
            
          this.a1.append( TENANT_NAME +"\t     \t"+ TENANTID+"\t      "+ TENANT_PHONE+ "\t\t    "+ ID_STORE+ "  \t"+ADDRESS+"\t   "+SEX+"           \t"+STORE_TYPE +"\t          "+CONTRACT_START_DATE+"                       \t"+CONTRACT_END_DATE+"\n");

         this.a1.append("-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n ");
        
            
            }
        
        }
          
         
         
         }
         
         
         if(index==3)
         {
         
             
        this.a1.setText("TENANT NAME     \t TENANT ID \t    TENANT PHONE  \tID STORE    \t ADDRESS      \t  SEX   \t STORE TYPE  \t CONTRACT START DATE  \t CONTRACT END DATE   \n");
        this.a1.append("-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n ");
 
             
             
           for(TenantOwner ss:alltnt)
        {
            if(ss.getTenantOwnerName().contains(nu)) 
            {
       TENANT_NAME=String.valueOf(ss.getTenantOwnerName());
          TENANTID=String.valueOf(ss.getTenantOwnerId());
           TENANT_PHONE=String.valueOf(ss.getTenantOwnerPhone());
         ID_STORE=String.valueOf(ss.getIdStore());
           ADDRESS=String.valueOf(ss.getAddress());
          SEX=String.valueOf(ss.getSex());
            STORE_TYPE=String.valueOf(ss.getStoreType());
            
              CONTRACT_START_DATE=String.valueOf(ss.getContractStartDate());
          CONTRACT_END_DATE=String.valueOf(ss.getContractEndDate());
            
        this.a1.append( TENANT_NAME +"\t     \t"+ TENANTID+"\t      "+ TENANT_PHONE+ "\t\t    "+ ID_STORE+ "  \t"+ADDRESS+"\t   "+SEX+"           \t"+STORE_TYPE +"\t          "+CONTRACT_START_DATE+"                       \t"+CONTRACT_END_DATE+"\n");

         this.a1.append("-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n ");
        
            }
            
        
        }
          
         
         
         
         
         
         }
         
         if(index==4)
         {
         
             
        this.a1.setText("TENANT NAME     \t TENANT ID \t    TENANT PHONE  \tID STORE    \t ADDRESS      \t  SEX   \t STORE TYPE  \t CONTRACT START DATE  \t CONTRACT END DATE   \n");
        this.a1.append("-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n ");
 
             
             
           for(TenantOwner ss:alltnt)
        {
            if(ss.getStoreType().contains(nu)) 
            {
       TENANT_NAME=String.valueOf(ss.getTenantOwnerName());
          TENANTID=String.valueOf(ss.getTenantOwnerId());
           TENANT_PHONE=String.valueOf(ss.getTenantOwnerPhone());
         ID_STORE=String.valueOf(ss.getIdStore());
           ADDRESS=String.valueOf(ss.getAddress());
          SEX=String.valueOf(ss.getSex());
            STORE_TYPE=String.valueOf(ss.getStoreType());
            
              CONTRACT_START_DATE=String.valueOf(ss.getContractStartDate());
          CONTRACT_END_DATE=String.valueOf(ss.getContractEndDate());
            
           
         
      this.a1.append( TENANT_NAME +"\t     \t"+ TENANTID+"\t      "+ TENANT_PHONE+ "\t\t    "+ ID_STORE+ "  \t"+ADDRESS+"\t   "+SEX+"           \t"+STORE_TYPE +"\t          "+CONTRACT_START_DATE+"                       \t"+CONTRACT_END_DATE+"\n");

         this.a1.append("-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n ");
        
            }
            
        
        }
          
         
         
         
         
         
         }
         
         
         
         
         
         
         
         
         
         
         
         
          em.getTransaction().commit();
            em.close();
         
         
         
         
        
        
    }//GEN-LAST:event_sesrechActionPerformed

    private void returnhomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnhomeActionPerformed
      
        op=new Home_screen() ; 
        
        
        this.setVisible(false);
        op.setVisible(true);
       
    }//GEN-LAST:event_returnhomeActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
       
        
      
      index= jComboBox1.getSelectedIndex();
        
        
     //  num=Integer.parseInt(nu);  
      
    
      
      
        
        
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void showallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showallActionPerformed
        
        
         EntityManagerFactory emf = Persistence.createEntityManagerFactory("GUIprojPU");
        EntityManager em =emf.createEntityManager();
        em.getTransaction().begin();
    
     Query qr=em.createNamedQuery("TenantOwner.findAll");
      List<TenantOwner> alltnt=qr.getResultList();
       // EntityManager em1=emf.createEntityManager();
       
       
          
    
     
        
       
        
        this.a1.setText("TENANT NAME     \t TENANT ID \t    TENANT PHONE  \tID STORE    \t ADDRESS      \t  SEX   \t STORE TYPE  \t CONTRACT START DATE  \t CONTRACT END DATE   \n");
        this.a1.append("-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n ");
 
          
        
        for(TenantOwner ss:alltnt)
        {
            
             TENANT_NAME=String.valueOf(ss.getTenantOwnerName());
          TENANTID=String.valueOf(ss.getTenantOwnerId());
           TENANT_PHONE=String.valueOf(ss.getTenantOwnerPhone());
         ID_STORE=String.valueOf(ss.getIdStore());
           ADDRESS=String.valueOf(ss.getAddress());
          SEX=String.valueOf(ss.getSex());
            STORE_TYPE=String.valueOf(ss.getStoreType());
            
              CONTRACT_START_DATE=String.valueOf(ss.getContractStartDate());
          CONTRACT_END_DATE=String.valueOf(ss.getContractEndDate());
           
            
        this.a1.append( TENANT_NAME +"\t     \t"+ TENANTID+"\t      "+ TENANT_PHONE+ "\t\t    "+ ID_STORE+ "  \t"+ADDRESS+"\t   "+SEX+"           \t"+STORE_TYPE +"\t          "+CONTRACT_START_DATE+"                       \t"+CONTRACT_END_DATE+"\n");

         this.a1.append("-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n ");
        
        }
        
     
         em.getTransaction().commit();
            em.close();
        
        
        
        
        
    }//GEN-LAST:event_showallActionPerformed

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
       
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("GUIprojPU");
        EntityManager em =emf.createEntityManager();
        em.getTransaction().begin();
        
        
       String fahs= txtremove.getText();
       
       String nu;
       
       int num;
       
   
   
    if (fahs.equals("")){
        
        
    JOptionPane.showMessageDialog(this, "Enter the ID, please !");
    
    
   return;
    
    }
        
       
        
         nu= txtremove.getText();
        num=Integer.parseInt(nu); 
        
        
         Query qr=em.createNamedQuery("TenantOwner.findAll");
         List<TenantOwner> alltnt=qr.getResultList();
      

             for(TenantOwner ss:alltnt)
                 
                {
            
            if(ss.getIdStore()== num) 
            {
                em.remove(ss);
                 JOptionPane.showMessageDialog(this, "Delete operation completed");
              em.getTransaction().commit();
            em.close();
            return;
                
            }
                }
       
            JOptionPane.showMessageDialog(this, " ID Does not exist");
              em.getTransaction().commit();
            em.close();
       
    }//GEN-LAST:event_removeActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        
              edit_tant1 edittnt = new  edit_tant1();
        
                      edittnt.setSize(860,470);
        
                      edittnt.setVisible(true);
                   

    }//GEN-LAST:event_editActionPerformed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        System.exit(0);
    }//GEN-LAST:event_closeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TENANTSGUI1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TENANTSGUI1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TENANTSGUI1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TENANTSGUI1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TENANTSGUI1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea a1;
    private javax.swing.JToggleButton addstore;
    private javax.swing.JButton close;
    private javax.swing.JButton edit;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton remove;
    private javax.swing.JButton returnhome;
    private javax.swing.JButton sesrech;
    private javax.swing.JButton showall;
    private javax.swing.JTextField txtremove;
    private javax.swing.JTextField txtt1;
    // End of variables declaration//GEN-END:variables
}
